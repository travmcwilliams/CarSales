  train:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      MPLBACKEND: "Agg"           # headless matplotlib
      DATA_PATH_HINT: "used_cars.csv"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show repo tree (sanity)
        run: |
          pwd
          ls -la
          find . -maxdepth 3 -type f | sort | sed -n '1,200p'

      - name: Verify dataset exists
        run: |
          test -f "used_cars.csv" || { echo "‚ùå used_cars.csv not found at repo root"; exit 1; }
          wc -l used_cars.csv
          head -5 used_cars.csv

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install training dependencies
        run: |
          python -m pip install --upgrade pip
          # Use your repo's requirements if present, then ensure notebook tooling
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install jupyter ipykernel nbconvert==7.* nbformat==5.* traitlets==5.* tornado==6.* \
                      pandas scikit-learn matplotlib mlflow requests

      - name: Execute training notebook (with longer timeout)
        run: |
          # Produce both an executed notebook and an HTML report you can open in Actions
          jupyter nbconvert \
            --to notebook \
            --execute Car_Sales_Clean.ipynb \
            --ExecutePreprocessor.timeout=1800 \
            --output output.ipynb

          jupyter nbconvert \
            --to html \
            output.ipynb \
            --output output.html

      - name: List produced artifacts
        run: |
          ls -la
          find . -maxdepth 2 -type f \( -name "local_model*" -o -name "*.csv" -o -name "output.*" \) -print

      - name: Upload training artifacts
        uses: actions/upload-artifact@v4
        with:
          name: training-artifacts
          path: |
            local_model/**
            feature_importances.csv
            predictions_test.csv
            sample_loaded_preds.csv
            output.ipynb
            output.html
          if-no-files-found: warn
